
#include "bitmapSD.h"

static bitmapHeader bInfo;


int loadBitmap( char fileName[8], char fileExt[3], uint32_t address)
{

	int ramIndex = 0;
	int i = 0;

	if (sdOpen("DIGITSEG", "BMP") != 0)
		return -1;

	if (sdBuffer[0] != 0x42 || sdBuffer[1] != 0x4D)
			return -2;
	else{
		bInfo.fileSize = grabWord(sdBuffer, 2);
		bInfo.bitmapPos  = grabWord(sdBuffer, 10);
		bInfo.bitmapSize = bInfo.fileSize - bitmapPos;
		bInfo.bitmapHeight = grabWord(sdBuffer, 22);
		bInfo.bitmapWidth  = grabWord(sdBuffer, 18);


	for(i=bitmapPos; i<bData._sectorSize && ramIndex < bitmapSize; i+=2){
		IOWR(NEW_SDRAM_CONTROLLER_0_BASE, address + (32*((bitmapHeight) - ((ramIndex/32)+1))) + (ramIndex%32), ((sdBuffer[i])<<8)|(sdBuffer[i+1]) );
		ramIndex += 2;
	}
	while (sdReadNext() == 0){
		for(i=0;  i <bData._sectorSize && ramIndex < bitmapSize ; i+=2){
			IOWR(NEW_SDRAM_CONTROLLER_0_BASE, address + (32*((bitmapHeight) - ((ramIndex/32)+1))) + (ramIndex%32), ((sdBuffer[i])<<8)|(sdBuffer[i+1]) );
			ramIndex += 2;
		}
	}
}
return 0;
}
